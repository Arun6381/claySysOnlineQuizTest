@model ClaysysOnlineQuizTest.Models.Question

@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/Admin_Layout.cshtml";
}
<link href="~/Content/CustomCss/Admin/addquestion.css" rel="stylesheet" />
<span class="heading">@TempData["Message"]</span>

<h2 class="heading">Add Question</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-container">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.QuestionText, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.QuestionText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuestionText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Option1, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Option1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Option1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Option2, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Option2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Option2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Option3, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Option3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Option3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Option4, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Option4, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Option4, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CorrectOption, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.CorrectOption, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CorrectOption, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Score, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Score, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Score, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="buttons">
            <div>
                @Html.ActionLink("Back ", "Index", "Topic", null, new { @class = "btn btn-secondary" })
            </div>
            <div class="button-container">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>

        </div>

    </div>
}


